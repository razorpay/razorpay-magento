type StoreConfig @doc(description: "The type contains information about a store config") {
    razorpay_key_id: String @doc(description: "Razorpay API Key ID")
    razorpay_merchant_name_override: String @doc(description: "Razorpay Merchange Name Override")
}

type Mutation {
	setRzpPaymentDetailsForOrder(input: SetRzpPaymentDetailsForOrderInput) : SetRzpPaymentDetailsForOrderOutput @resolver(class: "Razorpay\\Magento\\Model\\Resolver\\SetRzpPaymentDetailsForOrder")
	placeRazorpayOrder (order_id: String @doc(description: "order_id to generate Razorpay Order ID."), referrer: String @doc(description: "Checkout page URL of store.")) : RazorpayOrder @resolver( class: "Razorpay\\Magento\\Model\\Resolver\\PlaceRazorpayOrder") @doc(description: "Place Razorpay Order with cart amount and currency to generate RZP order ID.")
	resetCart(order_id: String @doc(description: "order_id used to generate Razorpay Order ID.")) : ResetCart @resolver( class: "Razorpay\\Magento\\Model\\Resolver\\ResetCart")
}

type RazorpayOrder {
	success: Boolean!
	rzp_order_id: String
	order_id: String
	amount: String
	currency: String
	message: String
}

input SetRzpPaymentDetailsForOrderInput {
	order_id: String!
	rzp_payment_id: String!
	rzp_signature: String!
}

type SetRzpPaymentDetailsForOrderOutput {
    order: Order!
}

type ResetCart {
	success: Boolean!
}

type Coupon {
    title: String
    discountAmount: Float
    description: String
}

type Query {
    getCoupons: [Coupon] @resolver(class: "Razorpay\\Magento\\Model\\Resolver\\CouponList") @doc(description: "Get the list of coupons")
}
